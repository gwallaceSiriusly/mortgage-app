{"ast":null,"code":"var _jsxFileName = \"/Library/WebServer/Documents/indiealley/wp-content/reactpress/apps/mortgage-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport '../node_modules/rsuite/dist/rsuite.min.css';\nimport './App.scss';\nimport { pv, pmt } from 'financial';\nimport { Slider } from 'rsuite'; // Usage\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [principal, setPrincipal] = useState(0);\n  const [rate, setRate] = useState(5.75);\n  const [term, setTerm] = useState(30);\n  const [other, setOther] = useState(500);\n  const [pi, setPI] = useState(1167.15);\n  const [taxes, setTaxes] = useState(166.67);\n  const [pmi, setPMI] = useState(250.00);\n  const [debts, setDebts] = useState(0);\n  const [income, setIncome] = useState(100000);\n  const [payment, setPayment] = useState(0);\n  const [dti, setDTI] = useState(36);\n  const [downpayment, setDownpayment] = useState(0);\n  const [aq, setAQ] = useState(0.2);\n  const [fieldsValidation, setFieldsValidation] = useState([\"hidden\", \"hidden\", \"hidden\", \"hidden\", \"hidden\", \"hidden\", \"hidden\", \"hidden\"]);\n\n  function validateIsCurrency(val, index) {\n    const isValid = /(?=.*?\\d)^\\$?(([1-9]\\d{0,2}(,\\d{3})*)|\\d+)?(\\.\\d{1,2})?$/.test(val);\n    setFieldsValidation(fieldsValidation.map((temp, i) => {\n      if (i === index) return isValid ? \"hidden\" : \"shown\";else return temp;\n    }));\n    return isValid;\n  }\n\n  function validateIsPercentage(val, index) {\n    const isValid = /^100$|^100.00$|^\\d{0,2}(\\.\\d{1,2})?$/.test(val);\n    setFieldsValidation(fieldsValidation.map((temp, i) => {\n      if (i === index) return isValid ? \"hidden\" : \"shown\";else return temp;\n    }));\n    return isValid;\n  }\n\n  function validateIsWholeNumber(val, index) {\n    const isValid = /^\\d+$/.test(val);\n    setFieldsValidation(fieldsValidation.map((temp, i) => {\n      if (i === index) return isValid ? \"hidden\" : \"shown\";else return temp;\n    }));\n    return isValid;\n  }\n\n  function toCurrencyString(val) {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(val);\n  }\n\n  function toFormattedNumberString(val) {\n    return new Intl.NumberFormat().format(val);\n  }\n\n  useEffect(() => {\n    const myMaxPayment = income / 12 * aq;\n    const actualRate = rate / 100 / 12;\n    const actualTerm = term * 12;\n    const myPrincipal = pv(actualRate, actualTerm, -myMaxPayment);\n    setPrincipal(Math.round(myPrincipal * 100) / 100);\n    setDebts(pi + taxes + pmi);\n    const myDTI = (debts + myMaxPayment + other) / (income / 12);\n    let temp = (debts + other) / (income / 12) + myMaxPayment / (income / 12);\n    console.log(myMaxPayment);\n    console.log(temp);\n    setDTI(Math.round(myDTI * 10000) / 100);\n    const actualPayment = pmt(actualRate, actualTerm, -myPrincipal - downpayment);\n    setPayment(Math.round(actualPayment * 100) / 100);\n  }, [principal, rate, term, payment, debts, income, other, dti, pi, taxes, pmi, aq, downpayment]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputPanel\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"income\",\n            className: \"error \" + fieldsValidation[0],\n            children: \"You need to enter a dollar amount.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"income\",\n            className: \"heading\",\n            children: \"Annual Gross Income ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"income\",\n            id: \"income\",\n            defaultValue: income,\n            onChange: ev => {\n              if (validateIsCurrency(ev.target.value, 0)) {\n                setIncome(Number(ev.target.value));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"tooltip\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltipText\",\n              children: \"Enter the total annual income before taxes for you and your co-borrower.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dp\",\n            className: \"error \" + fieldsValidation[7],\n            children: \"You need to enter a whole number of years.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dp\",\n            className: \"heading\",\n            children: \"Downpayment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"term\",\n            id: \"dp\",\n            defaultValue: downpayment,\n            onChange: ev => {\n              if (validateIsCurrency(ev.target.value, 7)) {\n                setDownpayment(Number(ev.target.value));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"tooltip\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltipText\",\n              children: \"Select the length of your loan in years.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"term\",\n            className: \"error \" + fieldsValidation[2],\n            children: \"You need to enter a whole number of years.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"term\",\n            className: \"heading\",\n            children: \"Loan Duration (yrs)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"term\",\n            id: \"term\",\n            defaultValue: term,\n            onChange: ev => {\n              if (validateIsWholeNumber(ev.target.value, 2)) {\n                setTerm(Number(ev.target.value));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"tooltip\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltipText\",\n              children: \"Select the length of your loan in years.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pmi\",\n            className: \"error \" + fieldsValidation[6],\n            children: \"You need to enter a dollar amount.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pmi\",\n            className: \"heading\",\n            children: \"Total Car Loan/Student Loan Debt ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"pmi\",\n            id: \"pmi\",\n            defaultValue: pmi,\n            onChange: ev => {\n              if (validateIsCurrency(ev.target.value, 6)) {\n                setPMI(Number(ev.target.value));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"tooltip\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltipText\",\n              children: \"Enter the total monthly amount of all current car loans or any student loans you pay.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pi\",\n            className: \"error \" + fieldsValidation[4],\n            children: \"You need to enter a dollar amount.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pi\",\n            className: \"heading\",\n            children: \"Monthly Instalment Debt ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"pi\",\n            id: \"pi\",\n            defaultValue: pi,\n            onChange: ev => {\n              if (validateIsCurrency(ev.target.value, 4)) {\n                setPI(Number(ev.target.value));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"tooltip\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltipText\",\n              children: \"Enter the total amount paid monthly on your credit cards or other installment debts.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"other\",\n            className: \"error \" + fieldsValidation[3],\n            children: \"You need to enter a dollar amount.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"other\",\n            className: \"heading\",\n            children: \"Monthly Other Debt ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"other\",\n            id: \"other\",\n            defaultValue: other,\n            onChange: ev => {\n              if (validateIsCurrency(ev.target.value, 3)) {\n                setOther(Number(ev.target.value));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"tooltip\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltipText\",\n              children: \"Enter the total amount of additional monthly debts.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taxes\",\n            className: \"error \" + fieldsValidation[5],\n            children: \"You need to enter a dollar amount.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taxes\",\n            className: \"heading\",\n            children: \"Property Taxes ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"taxes\",\n            id: \"taxes\",\n            defaultValue: taxes,\n            onChange: ev => {\n              if (validateIsCurrency(ev.target.value, 5)) {\n                setTaxes(Number(ev.target.value));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"tooltip\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltipText\",\n              children: \"Enter the total amount of Property Taxes you will pay.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rate\",\n            className: \"error \" + fieldsValidation[1],\n            children: \"You need to enter a percentage to 2 decimal places.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rate\",\n            className: \"heading\",\n            children: \"Interest rate (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"rate\",\n            id: \"rate\",\n            defaultValue: rate,\n            onChange: ev => {\n              if (validateIsPercentage(ev.target.value, 1)) {\n                setRate(Number(ev.target.value));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"tooltip\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltipText\",\n              children: \"Your interest rate will vary based on a number of factors including home price, down payment, credit score and even location. Estimate your rate based on current market conditions.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultPanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"affordabilityPanel\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"You can afford a home up to: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: toCurrencyString(principal)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Your monthly payment: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: toCurrencyString(payment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Debt to Income ratio: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: [toFormattedNumberString(dti), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"affordabilitySlider\",\n        children: [/*#__PURE__*/_jsxDEV(Slider, {\n          min: 0,\n          max: 50,\n          value: dti,\n          onChange: val => {\n            setAQ(val / 120);\n          },\n          className: \"custom-slider\",\n          handleStyle: {\n            borderRadius: 10,\n            color: '#fff',\n            fontSize: 12,\n            width: 32,\n            height: 22\n          },\n          graduated: false,\n          tooltip: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"*Debt-to-Income affects how much you can borrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The debt-to-income ratio (DTI) is your mnimum monthly debt divided by your gross monthly income. The lower your DTI, the more you can borrow and the more options you'll have.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"0-36%:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), \" Affordable\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"37-42%:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), \" Stretching\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"43% or higher:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), \" Aggressive\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/EJaE1RbOsI2HPKRy2Y91MWKL+Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","pv","pmt","Slider","App","principal","setPrincipal","rate","setRate","term","setTerm","other","setOther","pi","setPI","taxes","setTaxes","pmi","setPMI","debts","setDebts","income","setIncome","payment","setPayment","dti","setDTI","downpayment","setDownpayment","aq","setAQ","fieldsValidation","setFieldsValidation","validateIsCurrency","val","index","isValid","test","map","temp","i","validateIsPercentage","validateIsWholeNumber","toCurrencyString","Intl","NumberFormat","style","currency","format","toFormattedNumberString","myMaxPayment","actualRate","actualTerm","myPrincipal","Math","round","myDTI","console","log","actualPayment","ev","target","value","Number","borderRadius","color","fontSize","width","height"],"sources":["/Library/WebServer/Documents/indiealley/wp-content/reactpress/apps/mortgage-app/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nimport '../node_modules/rsuite/dist/rsuite.min.css';\nimport './App.scss';\nimport { pv, pmt } from 'financial'\nimport { Slider } from 'rsuite';\n\n// Usage\nfunction App() {\n\n  const [principal, setPrincipal] = useState<number>(0);\n  const [rate, setRate] = useState<number>(5.75);\n  const [term, setTerm] = useState<number>(30);\n  const [other, setOther] = useState<number>(500);\n  const [pi, setPI] = useState<number>(1167.15);\n  const [taxes, setTaxes] = useState<number>(166.67);\n  const [pmi, setPMI] = useState<number>(250.00);\n  const [debts, setDebts] = useState<number>(0);\n  const [income, setIncome] = useState<number>(100000);\n  const [payment, setPayment] = useState<number>(0);\n  const [dti, setDTI] = useState<number>(36);\n  const [downpayment, setDownpayment] = useState<number>(0);\n  const [aq, setAQ] = useState<number>(0.2);\n\n  const [fieldsValidation, setFieldsValidation] = useState<string[]>([\"hidden\",\"hidden\",\"hidden\",\"hidden\",\"hidden\",\"hidden\",\"hidden\",\"hidden\"]);\n\n  function validateIsCurrency(val :string, index :number) {\n    const isValid = /(?=.*?\\d)^\\$?(([1-9]\\d{0,2}(,\\d{3})*)|\\d+)?(\\.\\d{1,2})?$/.test(val);\n    setFieldsValidation(fieldsValidation.map((temp,i) => {\n      if(i===index) return (isValid?\"hidden\":\"shown\");\n      else return temp;\n    }));\n\n    return isValid;\n  }\n  \n  function validateIsPercentage(val :string, index :number) {\n    const isValid = /^100$|^100.00$|^\\d{0,2}(\\.\\d{1,2})?$/.test(val);\n    setFieldsValidation(fieldsValidation.map((temp,i) => {\n      if(i===index) return (isValid?\"hidden\":\"shown\");\n      else return temp;\n    }));\n\n    return isValid;\n  }\n\n  function validateIsWholeNumber(val :string, index :number) {\n    const isValid = /^\\d+$/.test(val);\n    setFieldsValidation(fieldsValidation.map((temp,i) => {\n      if(i===index) return (isValid?\"hidden\":\"shown\");\n      else return temp;\n    }));\n\n    return isValid;\n  }\n\n  function toCurrencyString(val :number) {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(val); \n  }\n\n  function toFormattedNumberString(val :number) {\n    return new Intl.NumberFormat().format(val); \n  }\n  \n  useEffect(() => {\n\n    const myMaxPayment = (income/12)*aq;\n\n    const actualRate = (rate/100)/12;\n    const actualTerm = term*12;\n\n    const myPrincipal = pv(actualRate, actualTerm, -myMaxPayment);\n    \n    setPrincipal(Math.round(myPrincipal * 100)/100);\n\n    setDebts(pi+taxes+pmi);\n    const myDTI =  (debts+myMaxPayment+other)/(income/12);\n\n    let temp = (debts+other)/(income/12)+myMaxPayment/(income/12);\n    console.log(myMaxPayment);\n    console.log(temp);\n\n    setDTI(Math.round(myDTI*10000)/100);\n\n    const actualPayment = pmt(actualRate, actualTerm, -myPrincipal-downpayment)\n\n    setPayment(Math.round(actualPayment * 100)/100);\n  }, [principal, rate, term, payment, debts, income, other, dti, pi, taxes, pmi, aq, downpayment]);\n\n  return (\n    <div className=\"calculator\">\n      <div className=\"inputPanel\">\n        <ul>\n          <li>\n            <label htmlFor=\"income\" className={\"error \" + fieldsValidation[0]}>You need to enter a dollar amount.</label>\n            <label htmlFor=\"income\" className=\"heading\">Annual Gross Income ($)</label>\n            <input type=\"tel\" name=\"income\" id=\"income\" defaultValue={income} onChange={(ev)=> {\n              if (validateIsCurrency(ev.target.value, 0)) {\n                setIncome(Number(ev.target.value));\n              }\n            }}></input>\n            <label className=\"tooltip\"> <span className=\"tooltipText\">Enter the total annual income before taxes for you and your co-borrower.</span></label>\n          </li>\n          <li>\n            <label htmlFor=\"dp\" className={\"error \" + fieldsValidation[7]}>You need to enter a whole number of years.</label>\n            <label htmlFor=\"dp\" className=\"heading\">Downpayment</label>\n            <input type=\"tel\" name=\"term\" id=\"dp\" defaultValue={downpayment} onChange={(ev)=> {\n              if (validateIsCurrency(ev.target.value, 7)) {\n                setDownpayment(Number(ev.target.value));\n              }\n            }}></input>\n            <label className=\"tooltip\"> <span className=\"tooltipText\">Select the length of your loan in years.</span></label>\n          </li>\n          <li>\n            <label htmlFor=\"term\" className={\"error \" + fieldsValidation[2]}>You need to enter a whole number of years.</label>\n            <label htmlFor=\"term\" className=\"heading\">Loan Duration (yrs)</label>\n            <input type=\"tel\" name=\"term\" id=\"term\" defaultValue={term} onChange={(ev)=> {\n              if (validateIsWholeNumber(ev.target.value, 2)) {\n                setTerm(Number(ev.target.value));\n              }\n            }}></input>\n            <label className=\"tooltip\"> <span className=\"tooltipText\">Select the length of your loan in years.</span></label>\n          </li>\n          <li>\n            <label htmlFor=\"pmi\" className={\"error \" + fieldsValidation[6]}>You need to enter a dollar amount.</label>\n            <label htmlFor=\"pmi\" className=\"heading\">Total Car Loan/Student Loan Debt ($)</label>\n            <input type=\"tel\" name=\"pmi\" id=\"pmi\" defaultValue={pmi} onChange={(ev)=> {\n              if (validateIsCurrency(ev.target.value, 6)) {\n                setPMI(Number(ev.target.value));\n              }\n            }}></input>\n            <label className=\"tooltip\"> <span className=\"tooltipText\">Enter the total monthly amount of all current car loans or any student loans you pay.</span></label>\n          </li>\n          <li>\n            <label htmlFor=\"pi\" className={\"error \" + fieldsValidation[4]}>You need to enter a dollar amount.</label>\n            <label htmlFor=\"pi\" className=\"heading\">Monthly Instalment Debt ($)</label>\n            <input type=\"tel\" name=\"pi\" id=\"pi\" defaultValue={pi} onChange={(ev)=> {\n              if (validateIsCurrency(ev.target.value, 4)) {\n                setPI(Number(ev.target.value));\n              }\n            }}></input>\n            <label className=\"tooltip\"> <span className=\"tooltipText\">Enter the total amount paid monthly on your credit cards or other installment debts.</span></label>\n          </li>\n          <li>\n            <label htmlFor=\"other\" className={\"error \" + fieldsValidation[3]}>You need to enter a dollar amount.</label>\n            <label htmlFor=\"other\" className=\"heading\">Monthly Other Debt ($)</label>\n            <input type=\"tel\" name=\"other\" id=\"other\" defaultValue={other} onChange={(ev)=> {\n              if (validateIsCurrency(ev.target.value, 3)) {\n                setOther(Number(ev.target.value));\n              }\n            }}></input>\n            <label className=\"tooltip\"> <span className=\"tooltipText\">Enter the total amount of additional monthly debts.</span></label>\n          </li>\n          <li>\n            <label htmlFor=\"taxes\" className={\"error \" + fieldsValidation[5]}>You need to enter a dollar amount.</label>\n            <label htmlFor=\"taxes\" className=\"heading\">Property Taxes ($)</label>\n            <input type=\"tel\" name=\"taxes\" id=\"taxes\" defaultValue={taxes} onChange={(ev)=> {\n              if (validateIsCurrency(ev.target.value, 5)) {\n                setTaxes(Number(ev.target.value));\n              }\n            }}></input>\n            <label className=\"tooltip\"> <span className=\"tooltipText\">Enter the total amount of Property Taxes you will pay.</span></label>\n          </li>\n          <li>\n            <label htmlFor=\"rate\" className={\"error \" + fieldsValidation[1]}>You need to enter a percentage to 2 decimal places.</label>\n            <label htmlFor=\"rate\" className=\"heading\">Interest rate (%)</label>\n            <input type=\"tel\" name=\"rate\" id=\"rate\" defaultValue={rate} onChange={(ev)=> {\n              if (validateIsPercentage(ev.target.value, 1)) {\n                setRate(Number(ev.target.value));\n              }\n            }}></input>\n            <label className=\"tooltip\"> <span className=\"tooltipText\">Your interest rate will vary based on a number of factors including home price, down payment, credit score and even location. Estimate your rate based on current market conditions.</span></label>\n          </li>\n        </ul>\n      </div>\n      <div className=\"resultPanel\">\n        <div className=\"affordabilityPanel\">\n          <p>\n            <span className=\"label\">You can afford a home up to: </span><span className=\"value\">{toCurrencyString(principal)}</span>\n          </p>\n          <p>\n            <span className=\"label\">Your monthly payment: </span><span className=\"value\">{toCurrencyString(payment)}</span>\n          </p>\n          <p>\n            <span className=\"label\">Debt to Income ratio: </span><span className=\"value\">{toFormattedNumberString(dti)}%</span>\n          </p>\n        </div>\n        <div className=\"affordabilitySlider\">\n          <Slider\n            min={0}\n            max={50}\n            value={dti}\n            onChange={(val:number)=>{\n              setAQ(val/120);\n            }}\n            className=\"custom-slider\"\n            handleStyle={{\n              borderRadius: 10,\n              color: '#fff',\n              fontSize: 12,\n              width: 32,\n              height: 22\n            }}\n            graduated={false}\n            tooltip={false}\n          />\n          <h3>*Debt-to-Income affects how much you can borrow</h3>\n          <p>The debt-to-income ratio (DTI) is your mnimum monthly debt divided by your gross monthly income. The lower your DTI, the more you can borrow and the more options you'll have.</p>\n\n          <ul>\n            <li>\n              <b>0-36%:</b> Affordable\n            </li>\n            <li>\n              <b>37-42%:</b> Stretching\n            </li>\n            <li>\n              <b>43% or higher:</b> Aggressive\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}