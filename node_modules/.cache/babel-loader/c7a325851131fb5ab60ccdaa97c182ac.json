{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\"; // Hook\n// Parameter is the boolean, with default \"false\" value\n\nconst useToggle = function () {\n  _s();\n\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  // Initialize the state\n  const [state, setState] = useState(initialState); // Define and memorize toggler function in case we pass down the comopnent,\n  // This function change the boolean value to it's opposite value\n\n  const toggle = useCallback(() => setState(state => !state), []);\n  return [state, toggle];\n};\n\n_s(useToggle, \"UzpTDfYauCPNSHGcq7l3+6aW5fE=\");\n\nexport default useToggle;","map":{"version":3,"names":["useState","useCallback","useToggle","initialState","state","setState","toggle"],"sources":["/Library/WebServer/Documents/ts-dice-app/src/hooks/useToggle.tsx"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\n// Hook\n// Parameter is the boolean, with default \"false\" value\nconst useToggle = (initialState: boolean = false): [boolean, any] => {\n  // Initialize the state\n  const [state, setState] = useState<boolean>(initialState);\n\n  // Define and memorize toggler function in case we pass down the comopnent,\n  // This function change the boolean value to it's opposite value\n  const toggle = useCallback((): void => setState((state) => !state), []);\n\n  return [state, toggle];\n};\n\nexport default useToggle;\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC,C,CAEA;AACA;;AACA,MAAMC,SAAS,GAAG,YAAmD;EAAA;;EAAA,IAAlDC,YAAkD,uEAA1B,KAA0B;EACnE;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAUG,YAAV,CAAlC,CAFmE,CAInE;EACA;;EACA,MAAMG,MAAM,GAAGL,WAAW,CAAC,MAAYI,QAAQ,CAAED,KAAD,IAAW,CAACA,KAAb,CAArB,EAA0C,EAA1C,CAA1B;EAEA,OAAO,CAACA,KAAD,EAAQE,MAAR,CAAP;AACD,CATD;;GAAMJ,S;;AAWN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}