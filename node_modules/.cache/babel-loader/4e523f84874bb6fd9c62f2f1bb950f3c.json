{"ast":null,"code":"var _jsxFileName = \"/Library/WebServer/Documents/indiealley/wp-content/reactpress/apps/mortgage-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.scss';\nimport '../node_modules/rsuite/dist/rsuite.min.css';\nimport { pv } from 'financial';\nimport { Slider } from 'rsuite'; // Usage\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [principal, setPrincipal] = useState(50020);\n  const [rate, setRate] = useState(5.75);\n  const [term, setTerm] = useState(30);\n  const [other, setOther] = useState(500);\n  const [pi, setPI] = useState(1167.15);\n  const [taxes, setTaxes] = useState(166.67);\n  const [pmi, setPMI] = useState(20.00);\n  const [insurance, setInsurance] = useState(83.33);\n  const [debts, setDebts] = useState(0);\n  const [income, setIncome] = useState(72000);\n  const [payment, setPayment] = useState(0);\n  const [dti, setDTI] = useState(36);\n  const maxAffordability = 0.25; //const maxdti = useState<number>(36);\n\n  const [fieldsValidation, setFieldsValidation] = useState([\"hidden\", \"hidden\", \"hidden\", \"hidden\", \"hidden\", \"hidden\", \"hidden\", \"hidden\"]);\n\n  function validateIsCurrency(val, index) {\n    const isValid = /(?=.*?\\d)^\\$?(([1-9]\\d{0,2}(,\\d{3})*)|\\d+)?(\\.\\d{1,2})?$/.test(val);\n    setFieldsValidation(fieldsValidation.map((temp, i) => {\n      if (i === index) return isValid ? \"hidden\" : \"shown\";else return temp;\n    }));\n    return isValid;\n  }\n\n  function validateIsPercentage(val, index) {\n    const isValid = /^100$|^100.00$|^\\d{0,2}(\\.\\d{1,2})?$/.test(val);\n    setFieldsValidation(fieldsValidation.map((temp, i) => {\n      if (i === index) return isValid ? \"hidden\" : \"shown\";else return temp;\n    }));\n    return isValid;\n  }\n\n  function validateIsWholeNumber(val, index) {\n    const isValid = /^\\d+$/.test(val);\n    setFieldsValidation(fieldsValidation.map((temp, i) => {\n      if (i === index) return isValid ? \"hidden\" : \"shown\";else return temp;\n    }));\n    return isValid;\n  }\n\n  useEffect(() => {\n    const myPayment = income / 12 * maxAffordability;\n    setPayment(Math.round(myPayment * 100) / 100);\n    /*\n     This is the reverse engineered formula, it comes out close but a bit different. Keeeping in a comment for now.\n     let i = (rate/100)/12;\n    let n = term*12;\n    let x = payment / (( i * (1 + i)**n ) / ( (1 + i)**n - 1));\n    */\n\n    const actualRate = rate / 100 / 12;\n    const actualTerm = term * 12;\n    const myPrincipal = pv(actualRate, actualTerm, -myPayment);\n    setPrincipal(Math.round(myPrincipal * 100) / 100);\n    setDebts(pi + taxes + pmi + insurance);\n    const myDTI = (debts + payment + other) / (income / 12);\n    setDTI(Math.round(myDTI * 10000) / 100);\n  }, [principal, rate, term, payment, debts, income, other, dti, insurance, pi, taxes, pmi]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"income\",\n          className: \"error \" + fieldsValidation[0],\n          children: \"Error message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"income\",\n          children: \"Income ($ annual): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"income\",\n          defaultValue: income,\n          onChange: ev => {\n            if (validateIsCurrency(ev.target.value, 0)) {\n              setIncome(Number(ev.target.value));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"income\",\n          className: \"error \" + fieldsValidation[1],\n          children: \"Error message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rate\",\n          children: \"Rate (%): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"rate\",\n          defaultValue: rate,\n          onChange: ev => {\n            if (validateIsPercentage(ev.target.value, 1)) {\n              setRate(Number(ev.target.value));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"income\",\n          className: \"error \" + fieldsValidation[2],\n          children: \"Error message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"term\",\n          children: \"Term (years): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"term\",\n          defaultValue: term,\n          onChange: ev => {\n            if (validateIsWholeNumber(ev.target.value, 2)) {\n              setTerm(Number(ev.target.value));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"income\",\n          className: \"error \" + fieldsValidation[3],\n          children: \"Error message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"other\",\n          children: \"Other ($): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"other\",\n          defaultValue: other,\n          onChange: ev => {\n            if (validateIsCurrency(ev.target.value, 3)) {\n              setOther(Number(ev.target.value));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"income\",\n          className: \"error \" + fieldsValidation[4],\n          children: \"Error message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"debts\",\n          children: \"P+I ($): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"pi\",\n          defaultValue: pi,\n          onChange: ev => {\n            if (validateIsCurrency(ev.target.value, 4)) {\n              setPI(Number(ev.target.value));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"income\",\n          className: \"error \" + fieldsValidation[5],\n          children: \"Error message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taxes\",\n          children: \"Taxes ($): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"taxes\",\n          defaultValue: taxes,\n          onChange: ev => {\n            if (validateIsCurrency(ev.target.value, 5)) {\n              setTaxes(Number(ev.target.value));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"income\",\n          className: \"error \" + fieldsValidation[6],\n          children: \"Error message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pmi\",\n          children: \"PMI ($): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"pmi\",\n          defaultValue: pmi,\n          onChange: ev => {\n            if (validateIsCurrency(ev.target.value, 6)) {\n              setPMI(Number(ev.target.value));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"income\",\n          className: \"error \" + fieldsValidation[7],\n          children: \"Error message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"insurance\",\n          children: \"Insurance ($): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"insurance\",\n          defaultValue: insurance,\n          onChange: ev => {\n            if (validateIsCurrency(ev.target.value, 7)) {\n              setInsurance(Number(ev.target.value));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Payment: \", payment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Principal: \", principal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Debt Ratio: \", dti]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      min: 0,\n      max: 100,\n      value: dti,\n      className: \"custom-slider\",\n      handleStyle: {\n        borderRadius: 10,\n        color: '#fff',\n        fontSize: 12,\n        width: 32,\n        height: 22\n      },\n      graduated: false,\n      tooltip: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"77u2HUnva1kSEVixMRGYxDiU/0c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","pv","Slider","App","principal","setPrincipal","rate","setRate","term","setTerm","other","setOther","pi","setPI","taxes","setTaxes","pmi","setPMI","insurance","setInsurance","debts","setDebts","income","setIncome","payment","setPayment","dti","setDTI","maxAffordability","fieldsValidation","setFieldsValidation","validateIsCurrency","val","index","isValid","test","map","temp","i","validateIsPercentage","validateIsWholeNumber","myPayment","Math","round","actualRate","actualTerm","myPrincipal","myDTI","ev","target","value","Number","borderRadius","color","fontSize","width","height"],"sources":["/Library/WebServer/Documents/indiealley/wp-content/reactpress/apps/mortgage-app/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nimport './App.scss';\nimport '../node_modules/rsuite/dist/rsuite.min.css';\nimport { pv } from 'financial'\nimport { Slider } from 'rsuite';\n\n// Usage\nfunction App() {\n\n  const [principal, setPrincipal] = useState<number>(50020);\n  const [rate, setRate] = useState<number>(5.75);\n  const [term, setTerm] = useState<number>(30);\n  const [other, setOther] = useState<number>(500);\n  const [pi, setPI] = useState<number>(1167.15);\n  const [taxes, setTaxes] = useState<number>(166.67);\n  const [pmi, setPMI] = useState<number>(20.00);\n  const [insurance, setInsurance] = useState<number>(83.33);\n  const [debts, setDebts] = useState<number>(0);\n  const [income, setIncome] = useState<number>(72000);\n  const [payment, setPayment] = useState<number>(0);\n  const [dti, setDTI] = useState<number>(36);\n\n  const maxAffordability = 0.25;\n  //const maxdti = useState<number>(36);\n\n  const [fieldsValidation, setFieldsValidation] = useState<string[]>([\"hidden\",\"hidden\",\"hidden\",\"hidden\",\"hidden\",\"hidden\",\"hidden\",\"hidden\"]);\n\n  function validateIsCurrency(val :string, index :number) {\n    const isValid = /(?=.*?\\d)^\\$?(([1-9]\\d{0,2}(,\\d{3})*)|\\d+)?(\\.\\d{1,2})?$/.test(val);\n    setFieldsValidation(fieldsValidation.map((temp,i) => {\n      if(i===index) return (isValid?\"hidden\":\"shown\");\n      else return temp;\n    }));\n\n    return isValid;\n  }\n  \n  function validateIsPercentage(val :string, index :number) {\n    const isValid = /^100$|^100.00$|^\\d{0,2}(\\.\\d{1,2})?$/.test(val);\n    setFieldsValidation(fieldsValidation.map((temp,i) => {\n      if(i===index) return (isValid?\"hidden\":\"shown\");\n      else return temp;\n    }));\n\n    return isValid;\n  }\n\n  function validateIsWholeNumber(val :string, index :number) {\n    const isValid = /^\\d+$/.test(val);\n    setFieldsValidation(fieldsValidation.map((temp,i) => {\n      if(i===index) return (isValid?\"hidden\":\"shown\");\n      else return temp;\n    }));\n\n    return isValid;\n  }\n  \n  useEffect(() => {\n\n    const myPayment = (income/12)*maxAffordability;\n\n    setPayment(Math.round(myPayment * 100)/100);\n\n\n    /*\n\n    This is the reverse engineered formula, it comes out close but a bit different. Keeeping in a comment for now.\n\n    let i = (rate/100)/12;\n    let n = term*12;\n    let x = payment / (( i * (1 + i)**n ) / ( (1 + i)**n - 1));\n    */\n    const actualRate = (rate/100)/12;\n    const actualTerm = term*12;\n\n    const myPrincipal = pv(actualRate, actualTerm, -myPayment);\n    \n    setPrincipal(Math.round(myPrincipal * 100)/100);\n\n    setDebts(pi+taxes+pmi+insurance);\n    const myDTI =  (debts+payment+other)/(income/12);\n\n    setDTI(Math.round(myDTI*10000)/100);\n  }, [principal, rate, term, payment, debts, income, other, dti, insurance, pi, taxes, pmi]);\n\n  return (\n    <div>\n      <ul>\n        <li>\n          <label htmlFor=\"income\" className={\"error \" + fieldsValidation[0]}>Error message</label>\n          <label htmlFor=\"income\">Income ($ annual): </label>\n          <input type=\"tel\" name=\"income\" defaultValue={income} onChange={(ev)=> {\n            if (validateIsCurrency(ev.target.value, 0)) {\n              setIncome(Number(ev.target.value));\n            }\n          }}></input>\n        </li>\n        <li>\n          <label htmlFor=\"income\" className={\"error \" + fieldsValidation[1]}>Error message</label>\n          <label htmlFor=\"rate\">Rate (%): </label>\n          <input type=\"tel\" name=\"rate\" defaultValue={rate} onChange={(ev)=> {\n            if (validateIsPercentage(ev.target.value, 1)) {\n              setRate(Number(ev.target.value));\n            }\n          }}></input>\n        </li>\n        <li>\n          <label htmlFor=\"income\" className={\"error \" + fieldsValidation[2]}>Error message</label>\n          <label htmlFor=\"term\">Term (years): </label>\n          <input type=\"tel\" name=\"term\" defaultValue={term} onChange={(ev)=> {\n            if (validateIsWholeNumber(ev.target.value, 2)) {\n              setTerm(Number(ev.target.value));\n            }\n          }}></input>\n        </li>\n        <li>\n          <label htmlFor=\"income\" className={\"error \" + fieldsValidation[3]}>Error message</label>\n          <label htmlFor=\"other\">Other ($): </label>\n          <input type=\"tel\" name=\"other\" defaultValue={other} onChange={(ev)=> {\n            if (validateIsCurrency(ev.target.value, 3)) {\n              setOther(Number(ev.target.value));\n            }\n          }}></input>\n        </li>\n        <li>\n          <label htmlFor=\"income\" className={\"error \" + fieldsValidation[4]}>Error message</label>\n          <label htmlFor=\"debts\">P+I ($): </label>\n          <input type=\"tel\" name=\"pi\" defaultValue={pi} onChange={(ev)=> {\n            if (validateIsCurrency(ev.target.value, 4)) {\n              setPI(Number(ev.target.value));\n            }\n          }}></input>\n        </li>\n        <li>\n          <label htmlFor=\"income\" className={\"error \" + fieldsValidation[5]}>Error message</label>\n          <label htmlFor=\"taxes\">Taxes ($): </label>\n          <input type=\"tel\" name=\"taxes\" defaultValue={taxes} onChange={(ev)=> {\n            if (validateIsCurrency(ev.target.value, 5)) {\n              setTaxes(Number(ev.target.value));\n            }\n          }}></input>\n        </li>\n        <li>\n          <label htmlFor=\"income\" className={\"error \" + fieldsValidation[6]}>Error message</label>\n          <label htmlFor=\"pmi\">PMI ($): </label>\n          <input type=\"tel\" name=\"pmi\" defaultValue={pmi} onChange={(ev)=> {\n            if (validateIsCurrency(ev.target.value, 6)) {\n              setPMI(Number(ev.target.value));\n            }\n          }}></input>\n        </li>\n        <li>\n          <label htmlFor=\"income\" className={\"error \" + fieldsValidation[7]}>Error message</label>\n          <label htmlFor=\"insurance\">Insurance ($): </label>\n          <input type=\"tel\" name=\"insurance\" defaultValue={insurance} onChange={(ev)=> {\n            if (validateIsCurrency(ev.target.value, 7)) {\n              setInsurance(Number(ev.target.value));\n            }\n          }}></input>\n        </li>\n      </ul>\n\n      <p>\n        Payment: {payment}\n      </p>\n      <p>\n        Principal: {principal}\n      </p>\n      <p>\n        Total Debt Ratio: {dti}\n      </p>\n      <Slider\n        min={0}\n        max={100}\n        value={dti}\n        className=\"custom-slider\"\n        handleStyle={{\n          borderRadius: 10,\n          color: '#fff',\n          fontSize: 12,\n          width: 32,\n          height: 22\n        }}\n        graduated={false}\n        tooltip={false}\n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}